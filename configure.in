# $Id$

# Require autoconf 2.52
AC_PREREQ(2.52)

# Process this file with autoconf to produce a configure script.
AC_INIT(pam_pkcs11,"0.5.3")
AC_CONFIG_SRCDIR([src/pam_pkcs11/pam_pkcs11.c])
AC_CANONICAL_TARGET([])
AM_INIT_AUTOMAKE(pam_pkcs11, "0.5.3")
AC_CONFIG_HEADERS([config.h])

AM_MAINTAINER_MODE

# Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AM_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_LN_S
AM_PROG_LEX
AC_PROG_MAKE_SET

dnl check enable_dependency_tracking configure option
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])

dnl Argument for debuging
AC_ARG_ENABLE(debug, 
  [  --enable-debug          add debugging code (default=yes)])
if test "$enable_debug" = "no" -o "$enable_debug" = "false"
then
  AC_MSG_WARN([Debugging support is completely disabled!])
  with_debug=no
else
  AC_DEFINE(DEBUG, 1, [Define to 1 if you want to include debugging code.])
  with_debug=yes
fi

# Add argument for using curl
AC_ARG_WITH(curl,
  [  --with-curl             use curl (default=no)])
if test "$with_curl" = "yes" -o "$with_curl" = "true"
then
  AC_CHECK_LIB(curl, curl_easy_init, 
	[ 
	with_curl=yes 
	LIBS="$LIBS -lcurl"
	],[
	AC_MSG_WARN(Could not locate cURL library. cURL disabled)
  	with_curl=no
	]) 
else
  with_curl=no
fi
AC_SUBST(CURL_CFLAGS)
AC_SUBST(CURL_LIBS)
AM_CONDITIONAL(HAVE_CURL, test x$with_curl = xyes)

# Add argument for using ldap
AC_ARG_WITH(ldap,
  [  --with-ldap             use ldap (default=yes)])
if test "$with_ldap" = "no" -o "$with_ldap" = "false"
then
  with_ldap=no
else
  AC_CHECK_LIB( ldap, ldap_init,
	[
	with_ldap=yes
	LIBS="$LIBS -lldap"
	],[
	AC_MSG_WARN([Cannot find LDAP libraries. LDAP support disabled])
	with_ldap=no
	])
fi
AC_SUBST(LDAP_CFLAGS)
AC_SUBST(LDAP_LIBS)
AM_CONDITIONAL(HAVE_LDAP, test x$with_ldap = xyes)

dnl Check for PCSC-Lite

AC_ARG_WITH(pcsclite,
  [  --with-pcsclite         Use pcsc-lite (default=yes)])
if test "$with_pcsclite" = "no" -o "$with_pcsclite" = "false"
then
  with_pcsclite=no
else
    PKG_CHECK_MODULES(PCSC, libpcsclite, [ with_pcsclite=yes ],
	[ if test -f /usr/local/lib/pkgconfig/libpcsclite.pc ; then
		AC_MSG_ERROR([use PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./configure])
	  else
		AC_MSG_WARN([pcsc-lite not found])
	        with_pcsclite=no
	fi
    ])
fi
AC_SUBST(PCSC_CFLAGS)
AC_SUBST(PCSC_LIBS)
AM_CONDITIONAL(HAVE_PCSC, test x$with_pcsclite = xyes)

dnl Check for SGML processor
AC_ARG_WITH(docbook,
[  --without-docbook       do no generate html manual (needs docbook)],
        with_docbook=$withval)
if test "$with_docbook" = "no" -o "$with_docbook" = "false"
then
        with_docbook=no
else
    AC_CHECK_PROG(XSLTPROC, xsltproc, xsltproc)
    if test "x$XSLTPROC" = "x"; then
        if test "x$with_docbook" = "xyes"; then
                AC_MSG_ERROR([Docbook support requested, but cannot find xsltproc])
        fi
        with_docbook=no
    else
	with_docbook=yes
    fi
fi
AM_CONDITIONAL(HAVE_DOCBOOK, test "x$with_docbook" != "xno")

# Check and set OpenSSL paths
PKG_CHECK_MODULES(OPENSSL, openssl, [ with_ssl=yes ], [ AC_MSG_ERROR(openssl not found) ])

# Checks for libraries.
AC_CHECK_LIB(pam, pam_get_item, , AC_MSG_ERROR(could not locate pam libraries))

# add our compiled static libraries
AC_SUBST(LIBSCCONF)
LIBSCCONF="\${top_builddir}/src/scconf/libscconf.la"
AC_SUBST(LIBCOMMON)
LIBCOMMON="\${top_builddir}/src/common/libcommon.la"
AC_SUBST(LIBMAPPERS)
LIBMAPPERS="\${top_builddir}/src/mappers/libmappers.la"
AC_SUBST(PAM_PKCS11)
PAM_PKCS11="\${top_builddir}/src/pam_pkcs11/pam_pkcs11.la"

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([string.h syslog.h fcntl.h unistd.h error.h])
if test "x$with_ldap" = "xyes"; then
AC_CHECK_HEADERS([ldap.h])
fi
if test "x$with_curl" = "xyes"; then
AC_CHECK_HEADERS([curl/curl.h])
fi

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_FUNC_STAT
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([memset strdup strerror])


AC_CONFIG_FILES([ 
Makefile
aclocal/Makefile
doc/Makefile
etc/Makefile
src/Makefile
src/scconf/Makefile
src/common/Makefile
src/tools/Makefile
src/mappers/Makefile
src/pam_pkcs11/Makefile
tools/Makefile
])
AC_OUTPUT

A=`eval echo ${prefix}` ; A=`eval echo ${A}`
B=`eval echo ${bindir}` ; B=`eval echo ${B}`
C=`eval echo ${sysconfdir}` ; C=`eval echo ${C}`

echo ""
echo "PAM-PKCS#11 has been configured with the following options"

echo ""
echo "Version:             ${PACKAGE_VERSION}"
echo "User binaries:       ${B}"
echo "Configuration files: ${C}"
echo ""
echo "Host:                ${host}"
echo "Compiler:            ${CC}"
echo "Compiler flags:      ${CFLAGS}"
echo "Preprocessor flags:  ${CPPFLAGS}"
echo "Linker flags:        ${LDFLAGS}"
echo "Libraries:           ${LIBS}"

echo ""
echo "Debugging:           ${with_debug}"
echo "DocBook support:     ${with_docbook}"
echo "PC/SC support:       ${with_pcsclite}"
echo "CURL support:        ${with_curl}"
echo "LDAP support:        ${with_ldap}"
echo ""
